name: parallel
on:
  push:
    branches:
      - "master"
      - "main"
  pull_request:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: nscloud
    outputs:
      instance-id: ${{ steps.create-cluster.outputs.instance-id }}
      access-token: ${{ steps.auth.outputs.token }}
      preview-url: ${{ steps.expose-cluster.outputs.preview-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create a k8s cluster with Namespace
        id: create-cluster
        uses: namespacelabs/nscloud-cluster-action@v0
        with:
          preview: true # Do not destroy the cluster at the end of this job

      - name: Deploy NGINX
        run: |
          kubectl run nginx --image=nginx
          kubectl expose pod nginx --type=LoadBalancer --port=80

      - name: Obtain access token
        id: auth
        run: |
          export TOKEN=`nsc ingress generate-access-token --instance ${{ steps.create-cluster.outputs.instance-id }}`

          echo "::add-mask::$TOKEN"
          echo "token=$TOKEN" >> "$GITHUB_OUTPUT"

      - name: Expose application
        id: expose-cluster
        run: |
          export PREVIEW_URL=`nsc expose kubernetes ${{ steps.create-cluster.outputs.instance-id }} \
            --namespace=default \
            --service=nginx \
            --name=demo-ingress-name \
            --ingress '*=noauth' \
            --output json | jq -r .url`

          echo "preview-url=$PREVIEW_URL" >> "$GITHUB_OUTPUT"

  withauth:
    runs-on: nscloud
    needs: prepare
    steps:
      - name: Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: example/withauth
          config: baseUrl=${{ needs.prepare.outputs.preview-url }}
          env: token=${{ needs.prepare.outputs.access-token }}

  noauth:
    runs-on: nscloud
    needs: prepare
    steps:
      - name: Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: example/noauth
          config: baseUrl=${{ needs.prepare.outputs.preview-url }}

  cleanup:
    runs-on: nscloud
    needs:
      - prepare
      - withauth
      - noauth
    steps:
      - name: Clean up demo
        run: |
          nsc cluster destroy --force ${{ needs.prepare.outputs.instance-id }}
